////////////////////////////////////////////////////////////////
///                                                          ///
///                   yeoman项目构建逻辑                       ///
///                   继承自yeoman-generator类                ///
///                   在生命周期回调中注入动态逻辑               ///
///                                                          ///
////////////////////////////////////////////////////////////////

const path = require('path');
const fs = require('fs');
const util = require('util');
const chalk = require('chalk');
const generators = require('yeoman-generator');
const yosay = require('yosay');
const figlet = require('figlet');
const ora = require('ora');

module.exports = class app extends generators {
  /**
   * 继承yeoman-generator
   * 获取生命周期hook
   */

  constructor(args, opts) {
    super(args, opts);
    this.appName = path.basename(process.cwd());
    this.appAuthor = 'wulimark';
  };

  /**
   * 脚手架初始化
   */

  initializing() {
    console.log(`
 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
 |||                                                    |||
 |||           mobile and pc project generator          |||
 |||           support es6 stylus zepto jquery          |||
 |||                                                    |||
 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    `);
    this.log(chalk.green('🦄  脚手架项目开始构建准备...请稍候...'));
    const spinner = ora('进入构建流程').succeed();
  };

  /**
   * 用户参数输入
   */

  prompting() {
    let questions = [
      {
        type: 'input',
        name: 'projectName',
        message: '请输入项目名称',
        default: this.appName
      },
      {
        type: 'input',
        name: 'projectVersion',
        message: '项目版本号',
        default: '1.0.0'
      },
      {
        name: 'mode',
        type: 'list',
        message: '请选择包含的子项目类型',
        choices: [
          {
            name: '只生成mobile项目',
            value: 0,
            checked: 0
          },
          {
            name: '只生成pc项目',
            value: 1
          },
          {
            name: '生成mobile及pc项目',
            value: 2
          }
        ]
      }
    ];
    return this.prompt(questions)
    .then(function(answers){
      for(let item in answers){
          //bind绑定上下文, prompting输入参数添加到this, 方便后续逻辑编写
          answers.hasOwnProperty(item) && (this[item] = answers[item]);
      }
      const spinner = ora('构建参数输入完毕, 进入架构配置生成流程').succeed();
    }.bind(this));
  };

  /**
   * 配置生成
   */

  configuring() {
    let defaultSettings = this.fs.readJSON(this.templatePath('package.json'));
    let packageSettings = {
      name: this.projectName,
      private: true,
      version: this.projectVersion,
      description: `${this.projectName} - Generated by generator-jquery-mobile-pc`,
      main: 'index.js',
      scripts: defaultSettings.scripts,
      repository: defaultSettings.repository || '',
      keywords: [],
      author: this.appAuthor,
      devDependencies: defaultSettings.devDependencies,
      dependencies: defaultSettings.dependencies,
      jest: defaultSettings.jest || '',
      babel: defaultSettings.babel || '',
      eslintConfig: defaultSettings.eslintConfig || '',
      proxy: defaultSettings.proxy || ''
    };
    this.fs.writeJSON(this.destinationPath('package.json'), packageSettings);
    const spinner = ora('架构配置生成完毕, 进入架构目录生成流程').succeed();
  };
 
  /**
   * 构建完成
   */

  end() {
    figlet('KKL FE TEAM', (err, data) => {
        if (err) {
            this.log(chalk.red('Something went wrong...'));
            console.dir(err);
            return;
        }
        this.log(chalk.green(data));
    });
  };
};